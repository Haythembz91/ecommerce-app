import {NextResponse} from "next/server";
import {getDb} from "@/utils/mongodb";
import {cookies} from "next/headers";
import jwt from "jsonwebtoken";
import {ObjectId} from "mongodb";

export async function GET(){
    try{
        const cookieStore = await cookies()
        const token = cookieStore.get('token')?.value
        if(!token){
            return NextResponse.json({message:'No token found'},{ status: 401 })
        }
        let decodedToken
        try{
            decodedToken = jwt.verify(token, process.env.JWT_SECRET as string)
        }catch (e){
            const error = e as Error
            return NextResponse.json({message:'Invalid token'},{ status: 401 })
        }
        const userId = (decodedToken).userId
        if (!userId) {
            return NextResponse.json({ error: 'Invalid token payload' }, { status: 400 })
        }
        const db = await getDb()
        if(!db){
            return NextResponse.json({message:'Database connection failed'},{ status: 500 })
        }
        const usersCollection = db.collection('users')
        const user = await usersCollection.findOne({ _id: new ObjectId(userId) }, { projection: { hashedPassword: 0 } })
        if (!user) {
            return NextResponse.json({ message: 'User not found' }, { status: 404 })
        }
        return NextResponse.json(user)
    }catch(e){
        const error = e as Error
        console.error(error)
        return NextResponse.json({message:error.message})
    }
}